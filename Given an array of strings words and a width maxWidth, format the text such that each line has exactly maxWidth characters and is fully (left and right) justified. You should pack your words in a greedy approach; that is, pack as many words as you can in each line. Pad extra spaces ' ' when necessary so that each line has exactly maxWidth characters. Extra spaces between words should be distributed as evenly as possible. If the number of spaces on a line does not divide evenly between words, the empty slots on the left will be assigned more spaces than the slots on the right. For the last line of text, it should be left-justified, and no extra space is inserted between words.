def fullJustify(words, maxWidth):
    def justify_line(line_words, length, is_last_line):
        if len(line_words) == 1:
            return line_words[0] + ' ' * (maxWidth - length)
        
        num_gaps = len(line_words) - 1
        total_spaces = maxWidth - length
        
        if is_last_line:
            return ' '.join(line_words) + ' ' * (maxWidth - length - num_gaps)
        
        min_space = total_spaces // num_gaps
        extra_space = total_spaces % num_gaps
        
        justified_line = ''
        for i in range(num_gaps):
            justified_line += line_words[i]
            justified_line += ' ' * (min_space + (1 if i < extra_space else 0))
        
        justified_line += line_words[-1]
        return justified_line
    
    result = []
    current_line_words = []
    current_line_length = 0
    
    for word in words:
        if current_line_length + len(word) + len(current_line_words) > maxWidth:
            result.append(justify_line(current_line_words, current_line_length, False))
            current_line_words = []
            current_line_length = 0
        
        current_line_words.append(word)
        current_line_length += len(word)
    
    result.append(justify_line(current_line_words, current_line_length, True))
    
    return result

# Example usage:
words1 = ["This", "is", "an", "example", "of", "text", "justification."]
maxWidth1 = 16
print(fullJustify(words1, maxWidth1))

words2 = ["What","must","be","acknowledgment","shall","be"]
maxWidth2 = 16
print(fullJustify(words2, maxWidth2))

words3 = ["Science","is","what","we","understand","well","enough","to","explain","to","a","computer.","Art","is","e
