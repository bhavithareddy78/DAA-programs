import heapq

def k_closest_points(points, k):
    # Calculate distances and store them along with points
    distances = [(x*x + y*y, [x, y]) for x, y in points]
    
    # Use a min heap to keep track of k closest points
    heap = []
    for dist, point in distances:
        heapq.heappush(heap, (dist, point))
        if len(heap) > k:
            heapq.heappop(heap)
    
    # Extract the k closest points
    result = [point for _, point in heap]
    return result

# Given input
points_input = [[1, 3], [-2, 2], [5, 8], [0, 1]]
k_input = 2

# Find k closest points
closest_points = k_closest_points(points_input, k_input)

print(f"The {k_input} closest points to the origin are:")
for point in closest_points:
    print(point)
