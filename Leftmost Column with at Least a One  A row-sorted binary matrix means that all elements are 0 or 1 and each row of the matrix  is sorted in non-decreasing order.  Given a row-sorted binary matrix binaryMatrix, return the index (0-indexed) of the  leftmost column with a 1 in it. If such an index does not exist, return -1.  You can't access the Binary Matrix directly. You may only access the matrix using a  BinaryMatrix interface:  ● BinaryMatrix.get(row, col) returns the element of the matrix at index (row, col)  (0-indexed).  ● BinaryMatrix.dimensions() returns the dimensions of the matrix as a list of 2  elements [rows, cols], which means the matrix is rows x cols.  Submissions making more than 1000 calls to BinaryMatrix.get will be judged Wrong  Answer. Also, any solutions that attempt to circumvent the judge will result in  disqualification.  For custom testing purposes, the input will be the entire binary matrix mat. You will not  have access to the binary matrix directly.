class BinaryMatrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def get(self, row, col):
        return self.matrix[row][col]

    def dimensions(self):
        return [len(self.matrix), len(self.matrix[0])]

def leftmost_column_with_one(binaryMatrix):
    rows, cols = binaryMatrix.dimensions()
    row, col = 0, cols - 1
    leftmost = -1

    while row < rows and col >= 0:
        if binaryMatrix.get(row, col) == 1:
            leftmost = col
            col -= 1
        else:
            row += 1

    return leftmost

# Example usage:
binaryMatrix = BinaryMatrix([[0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 0], [0, 1, 1, 1]])
print(leftmost_column_with_one(binaryMatrix))  # Output: 1
