def findPeakElement(nums):
    def binary_search(left, right):
        if left == right:
            return left
        
        mid = (left + right) // 2
        
        # Compare mid element with its neighbors
        if nums[mid] > nums[mid + 1]:
            # Peak is on the left side (including mid)
            return binary_search(left, mid)
        else:
            # Peak is on the right side
            return binary_search(mid + 1, right)
    
    return binary_search(0, len(nums) - 1)

# Example usage:
nums1 = [1, 2, 3, 1]
print(findPeakElement(nums1))  # Output: 2 (index of peak element 3)

nums2 = [1, 2, 1, 3, 5, 6, 4]
print(findPeakElement(nums2))  # Output: 5 (index of peak element 6, or could be index 1 for element 2)
