from collections import deque

def game_outcome(graph):
    start_state = (1, 2, 0)
    visited = set()
    visited.add(start_state)
    queue = deque([start_state])
    
    while queue:
        mouse, cat, turn = queue.popleft()
        
        if mouse == 0:
            return 1
        if mouse == cat:
            return 2
        
        if turn == 0:
            for next_mouse in graph[mouse]:
                next_state = (next_mouse, cat, 1)
                if next_state not in visited:
                    visited.add(next_state)
                    queue.append(next_state)
        else:
            for next_cat in graph[cat]:
                if next_cat != 0:
                    next_state = (mouse, next_cat, 0)
                    if next_state not in visited:
                        visited.add(next_state)
                        queue.append(next_state)
    
    return 0

